
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `OperatorInvitation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model OperatorInvitation
 * 
 */
export type OperatorInvitationModel = runtime.Types.Result.DefaultSelection<Prisma.$OperatorInvitationPayload>

export type AggregateOperatorInvitation = {
  _count: OperatorInvitationCountAggregateOutputType | null
  _min: OperatorInvitationMinAggregateOutputType | null
  _max: OperatorInvitationMaxAggregateOutputType | null
}

export type OperatorInvitationMinAggregateOutputType = {
  id: string | null
  operatorId: string | null
  username: string | null
  role: $Enums.Role | null
  token: string | null
  expiresAt: Date | null
  acceptedAt: Date | null
  invitedById: string | null
  userProfileId: string | null
}

export type OperatorInvitationMaxAggregateOutputType = {
  id: string | null
  operatorId: string | null
  username: string | null
  role: $Enums.Role | null
  token: string | null
  expiresAt: Date | null
  acceptedAt: Date | null
  invitedById: string | null
  userProfileId: string | null
}

export type OperatorInvitationCountAggregateOutputType = {
  id: number
  operatorId: number
  username: number
  role: number
  token: number
  expiresAt: number
  acceptedAt: number
  invitedById: number
  userProfileId: number
  _all: number
}


export type OperatorInvitationMinAggregateInputType = {
  id?: true
  operatorId?: true
  username?: true
  role?: true
  token?: true
  expiresAt?: true
  acceptedAt?: true
  invitedById?: true
  userProfileId?: true
}

export type OperatorInvitationMaxAggregateInputType = {
  id?: true
  operatorId?: true
  username?: true
  role?: true
  token?: true
  expiresAt?: true
  acceptedAt?: true
  invitedById?: true
  userProfileId?: true
}

export type OperatorInvitationCountAggregateInputType = {
  id?: true
  operatorId?: true
  username?: true
  role?: true
  token?: true
  expiresAt?: true
  acceptedAt?: true
  invitedById?: true
  userProfileId?: true
  _all?: true
}

export type OperatorInvitationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OperatorInvitation to aggregate.
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OperatorInvitations to fetch.
   */
  orderBy?: Prisma.OperatorInvitationOrderByWithRelationInput | Prisma.OperatorInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OperatorInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OperatorInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OperatorInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned OperatorInvitations
  **/
  _count?: true | OperatorInvitationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OperatorInvitationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OperatorInvitationMaxAggregateInputType
}

export type GetOperatorInvitationAggregateType<T extends OperatorInvitationAggregateArgs> = {
      [P in keyof T & keyof AggregateOperatorInvitation]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOperatorInvitation[P]>
    : Prisma.GetScalarType<T[P], AggregateOperatorInvitation[P]>
}




export type OperatorInvitationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OperatorInvitationWhereInput
  orderBy?: Prisma.OperatorInvitationOrderByWithAggregationInput | Prisma.OperatorInvitationOrderByWithAggregationInput[]
  by: Prisma.OperatorInvitationScalarFieldEnum[] | Prisma.OperatorInvitationScalarFieldEnum
  having?: Prisma.OperatorInvitationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OperatorInvitationCountAggregateInputType | true
  _min?: OperatorInvitationMinAggregateInputType
  _max?: OperatorInvitationMaxAggregateInputType
}

export type OperatorInvitationGroupByOutputType = {
  id: string
  operatorId: string
  username: string
  role: $Enums.Role
  token: string
  expiresAt: Date
  acceptedAt: Date | null
  invitedById: string
  userProfileId: string | null
  _count: OperatorInvitationCountAggregateOutputType | null
  _min: OperatorInvitationMinAggregateOutputType | null
  _max: OperatorInvitationMaxAggregateOutputType | null
}

type GetOperatorInvitationGroupByPayload<T extends OperatorInvitationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OperatorInvitationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OperatorInvitationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OperatorInvitationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OperatorInvitationGroupByOutputType[P]>
      }
    >
  > 



export type OperatorInvitationWhereInput = {
  AND?: Prisma.OperatorInvitationWhereInput | Prisma.OperatorInvitationWhereInput[]
  OR?: Prisma.OperatorInvitationWhereInput[]
  NOT?: Prisma.OperatorInvitationWhereInput | Prisma.OperatorInvitationWhereInput[]
  id?: Prisma.StringFilter<"OperatorInvitation"> | string
  operatorId?: Prisma.StringFilter<"OperatorInvitation"> | string
  username?: Prisma.StringFilter<"OperatorInvitation"> | string
  role?: Prisma.EnumRoleFilter<"OperatorInvitation"> | $Enums.Role
  token?: Prisma.StringFilter<"OperatorInvitation"> | string
  expiresAt?: Prisma.DateTimeFilter<"OperatorInvitation"> | Date | string
  acceptedAt?: Prisma.DateTimeNullableFilter<"OperatorInvitation"> | Date | string | null
  invitedById?: Prisma.StringFilter<"OperatorInvitation"> | string
  userProfileId?: Prisma.StringNullableFilter<"OperatorInvitation"> | string | null
  operator?: Prisma.XOR<Prisma.OperatorScalarRelationFilter, Prisma.OperatorWhereInput>
  invitedUser?: Prisma.XOR<Prisma.UserProfileScalarRelationFilter, Prisma.UserProfileWhereInput>
}

export type OperatorInvitationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  role?: Prisma.SortOrder
  token?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  userProfileId?: Prisma.SortOrderInput | Prisma.SortOrder
  operator?: Prisma.OperatorOrderByWithRelationInput
  invitedUser?: Prisma.UserProfileOrderByWithRelationInput
}

export type OperatorInvitationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  token?: string
  AND?: Prisma.OperatorInvitationWhereInput | Prisma.OperatorInvitationWhereInput[]
  OR?: Prisma.OperatorInvitationWhereInput[]
  NOT?: Prisma.OperatorInvitationWhereInput | Prisma.OperatorInvitationWhereInput[]
  operatorId?: Prisma.StringFilter<"OperatorInvitation"> | string
  username?: Prisma.StringFilter<"OperatorInvitation"> | string
  role?: Prisma.EnumRoleFilter<"OperatorInvitation"> | $Enums.Role
  expiresAt?: Prisma.DateTimeFilter<"OperatorInvitation"> | Date | string
  acceptedAt?: Prisma.DateTimeNullableFilter<"OperatorInvitation"> | Date | string | null
  invitedById?: Prisma.StringFilter<"OperatorInvitation"> | string
  userProfileId?: Prisma.StringNullableFilter<"OperatorInvitation"> | string | null
  operator?: Prisma.XOR<Prisma.OperatorScalarRelationFilter, Prisma.OperatorWhereInput>
  invitedUser?: Prisma.XOR<Prisma.UserProfileScalarRelationFilter, Prisma.UserProfileWhereInput>
}, "id" | "token">

export type OperatorInvitationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  role?: Prisma.SortOrder
  token?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  userProfileId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.OperatorInvitationCountOrderByAggregateInput
  _max?: Prisma.OperatorInvitationMaxOrderByAggregateInput
  _min?: Prisma.OperatorInvitationMinOrderByAggregateInput
}

export type OperatorInvitationScalarWhereWithAggregatesInput = {
  AND?: Prisma.OperatorInvitationScalarWhereWithAggregatesInput | Prisma.OperatorInvitationScalarWhereWithAggregatesInput[]
  OR?: Prisma.OperatorInvitationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OperatorInvitationScalarWhereWithAggregatesInput | Prisma.OperatorInvitationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"OperatorInvitation"> | string
  operatorId?: Prisma.StringWithAggregatesFilter<"OperatorInvitation"> | string
  username?: Prisma.StringWithAggregatesFilter<"OperatorInvitation"> | string
  role?: Prisma.EnumRoleWithAggregatesFilter<"OperatorInvitation"> | $Enums.Role
  token?: Prisma.StringWithAggregatesFilter<"OperatorInvitation"> | string
  expiresAt?: Prisma.DateTimeWithAggregatesFilter<"OperatorInvitation"> | Date | string
  acceptedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"OperatorInvitation"> | Date | string | null
  invitedById?: Prisma.StringWithAggregatesFilter<"OperatorInvitation"> | string
  userProfileId?: Prisma.StringNullableWithAggregatesFilter<"OperatorInvitation"> | string | null
}

export type OperatorInvitationCreateInput = {
  id?: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
  operator: Prisma.OperatorCreateNestedOneWithoutInvitationsInput
  invitedUser: Prisma.UserProfileCreateNestedOneWithoutOperatorInvitationsInput
}

export type OperatorInvitationUncheckedCreateInput = {
  id?: string
  operatorId: string
  username: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  operator?: Prisma.OperatorUpdateOneRequiredWithoutInvitationsNestedInput
  invitedUser?: Prisma.UserProfileUpdateOneRequiredWithoutOperatorInvitationsNestedInput
}

export type OperatorInvitationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationCreateManyInput = {
  id?: string
  operatorId: string
  username: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationListRelationFilter = {
  every?: Prisma.OperatorInvitationWhereInput
  some?: Prisma.OperatorInvitationWhereInput
  none?: Prisma.OperatorInvitationWhereInput
}

export type OperatorInvitationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type OperatorInvitationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  role?: Prisma.SortOrder
  token?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  userProfileId?: Prisma.SortOrder
}

export type OperatorInvitationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  role?: Prisma.SortOrder
  token?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  userProfileId?: Prisma.SortOrder
}

export type OperatorInvitationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  operatorId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  role?: Prisma.SortOrder
  token?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  acceptedAt?: Prisma.SortOrder
  invitedById?: Prisma.SortOrder
  userProfileId?: Prisma.SortOrder
}

export type OperatorInvitationCreateNestedManyWithoutOperatorInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput> | Prisma.OperatorInvitationCreateWithoutOperatorInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput | Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput[]
  createMany?: Prisma.OperatorInvitationCreateManyOperatorInputEnvelope
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
}

export type OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput> | Prisma.OperatorInvitationCreateWithoutOperatorInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput | Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput[]
  createMany?: Prisma.OperatorInvitationCreateManyOperatorInputEnvelope
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
}

export type OperatorInvitationUpdateManyWithoutOperatorNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput> | Prisma.OperatorInvitationCreateWithoutOperatorInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput | Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput[]
  upsert?: Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutOperatorInput | Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutOperatorInput[]
  createMany?: Prisma.OperatorInvitationCreateManyOperatorInputEnvelope
  set?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  disconnect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  delete?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  update?: Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutOperatorInput | Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutOperatorInput[]
  updateMany?: Prisma.OperatorInvitationUpdateManyWithWhereWithoutOperatorInput | Prisma.OperatorInvitationUpdateManyWithWhereWithoutOperatorInput[]
  deleteMany?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
}

export type OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput> | Prisma.OperatorInvitationCreateWithoutOperatorInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput | Prisma.OperatorInvitationCreateOrConnectWithoutOperatorInput[]
  upsert?: Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutOperatorInput | Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutOperatorInput[]
  createMany?: Prisma.OperatorInvitationCreateManyOperatorInputEnvelope
  set?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  disconnect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  delete?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  update?: Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutOperatorInput | Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutOperatorInput[]
  updateMany?: Prisma.OperatorInvitationUpdateManyWithWhereWithoutOperatorInput | Prisma.OperatorInvitationUpdateManyWithWhereWithoutOperatorInput[]
  deleteMany?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
}

export type EnumRoleFieldUpdateOperationsInput = {
  set?: $Enums.Role
}

export type OperatorInvitationCreateNestedManyWithoutInvitedUserInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput> | Prisma.OperatorInvitationCreateWithoutInvitedUserInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput | Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput[]
  createMany?: Prisma.OperatorInvitationCreateManyInvitedUserInputEnvelope
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
}

export type OperatorInvitationUncheckedCreateNestedManyWithoutInvitedUserInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput> | Prisma.OperatorInvitationCreateWithoutInvitedUserInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput | Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput[]
  createMany?: Prisma.OperatorInvitationCreateManyInvitedUserInputEnvelope
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
}

export type OperatorInvitationUpdateManyWithoutInvitedUserNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput> | Prisma.OperatorInvitationCreateWithoutInvitedUserInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput | Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput[]
  upsert?: Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutInvitedUserInput | Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutInvitedUserInput[]
  createMany?: Prisma.OperatorInvitationCreateManyInvitedUserInputEnvelope
  set?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  disconnect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  delete?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  update?: Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutInvitedUserInput | Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutInvitedUserInput[]
  updateMany?: Prisma.OperatorInvitationUpdateManyWithWhereWithoutInvitedUserInput | Prisma.OperatorInvitationUpdateManyWithWhereWithoutInvitedUserInput[]
  deleteMany?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
}

export type OperatorInvitationUncheckedUpdateManyWithoutInvitedUserNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput> | Prisma.OperatorInvitationCreateWithoutInvitedUserInput[] | Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput[]
  connectOrCreate?: Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput | Prisma.OperatorInvitationCreateOrConnectWithoutInvitedUserInput[]
  upsert?: Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutInvitedUserInput | Prisma.OperatorInvitationUpsertWithWhereUniqueWithoutInvitedUserInput[]
  createMany?: Prisma.OperatorInvitationCreateManyInvitedUserInputEnvelope
  set?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  disconnect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  delete?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  connect?: Prisma.OperatorInvitationWhereUniqueInput | Prisma.OperatorInvitationWhereUniqueInput[]
  update?: Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutInvitedUserInput | Prisma.OperatorInvitationUpdateWithWhereUniqueWithoutInvitedUserInput[]
  updateMany?: Prisma.OperatorInvitationUpdateManyWithWhereWithoutInvitedUserInput | Prisma.OperatorInvitationUpdateManyWithWhereWithoutInvitedUserInput[]
  deleteMany?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
}

export type OperatorInvitationCreateWithoutOperatorInput = {
  id?: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
  invitedUser: Prisma.UserProfileCreateNestedOneWithoutOperatorInvitationsInput
}

export type OperatorInvitationUncheckedCreateWithoutOperatorInput = {
  id?: string
  username: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationCreateOrConnectWithoutOperatorInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput>
}

export type OperatorInvitationCreateManyOperatorInputEnvelope = {
  data: Prisma.OperatorInvitationCreateManyOperatorInput | Prisma.OperatorInvitationCreateManyOperatorInput[]
  skipDuplicates?: boolean
}

export type OperatorInvitationUpsertWithWhereUniqueWithoutOperatorInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  update: Prisma.XOR<Prisma.OperatorInvitationUpdateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedUpdateWithoutOperatorInput>
  create: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedCreateWithoutOperatorInput>
}

export type OperatorInvitationUpdateWithWhereUniqueWithoutOperatorInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateWithoutOperatorInput, Prisma.OperatorInvitationUncheckedUpdateWithoutOperatorInput>
}

export type OperatorInvitationUpdateManyWithWhereWithoutOperatorInput = {
  where: Prisma.OperatorInvitationScalarWhereInput
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateManyMutationInput, Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorInput>
}

export type OperatorInvitationScalarWhereInput = {
  AND?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
  OR?: Prisma.OperatorInvitationScalarWhereInput[]
  NOT?: Prisma.OperatorInvitationScalarWhereInput | Prisma.OperatorInvitationScalarWhereInput[]
  id?: Prisma.StringFilter<"OperatorInvitation"> | string
  operatorId?: Prisma.StringFilter<"OperatorInvitation"> | string
  username?: Prisma.StringFilter<"OperatorInvitation"> | string
  role?: Prisma.EnumRoleFilter<"OperatorInvitation"> | $Enums.Role
  token?: Prisma.StringFilter<"OperatorInvitation"> | string
  expiresAt?: Prisma.DateTimeFilter<"OperatorInvitation"> | Date | string
  acceptedAt?: Prisma.DateTimeNullableFilter<"OperatorInvitation"> | Date | string | null
  invitedById?: Prisma.StringFilter<"OperatorInvitation"> | string
  userProfileId?: Prisma.StringNullableFilter<"OperatorInvitation"> | string | null
}

export type OperatorInvitationCreateWithoutInvitedUserInput = {
  id?: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
  operator: Prisma.OperatorCreateNestedOneWithoutInvitationsInput
}

export type OperatorInvitationUncheckedCreateWithoutInvitedUserInput = {
  id?: string
  operatorId: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationCreateOrConnectWithoutInvitedUserInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput>
}

export type OperatorInvitationCreateManyInvitedUserInputEnvelope = {
  data: Prisma.OperatorInvitationCreateManyInvitedUserInput | Prisma.OperatorInvitationCreateManyInvitedUserInput[]
  skipDuplicates?: boolean
}

export type OperatorInvitationUpsertWithWhereUniqueWithoutInvitedUserInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  update: Prisma.XOR<Prisma.OperatorInvitationUpdateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedUpdateWithoutInvitedUserInput>
  create: Prisma.XOR<Prisma.OperatorInvitationCreateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedCreateWithoutInvitedUserInput>
}

export type OperatorInvitationUpdateWithWhereUniqueWithoutInvitedUserInput = {
  where: Prisma.OperatorInvitationWhereUniqueInput
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateWithoutInvitedUserInput, Prisma.OperatorInvitationUncheckedUpdateWithoutInvitedUserInput>
}

export type OperatorInvitationUpdateManyWithWhereWithoutInvitedUserInput = {
  where: Prisma.OperatorInvitationScalarWhereInput
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateManyMutationInput, Prisma.OperatorInvitationUncheckedUpdateManyWithoutInvitedUserInput>
}

export type OperatorInvitationCreateManyOperatorInput = {
  id?: string
  username: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationUpdateWithoutOperatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  invitedUser?: Prisma.UserProfileUpdateOneRequiredWithoutOperatorInvitationsNestedInput
}

export type OperatorInvitationUncheckedUpdateWithoutOperatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationUncheckedUpdateManyWithoutOperatorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationCreateManyInvitedUserInput = {
  id?: string
  operatorId: string
  role?: $Enums.Role
  token?: string
  expiresAt: Date | string
  acceptedAt?: Date | string | null
  invitedById: string
  userProfileId?: string | null
}

export type OperatorInvitationUpdateWithoutInvitedUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  operator?: Prisma.OperatorUpdateOneRequiredWithoutInvitationsNestedInput
}

export type OperatorInvitationUncheckedUpdateWithoutInvitedUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type OperatorInvitationUncheckedUpdateManyWithoutInvitedUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  operatorId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  token?: Prisma.StringFieldUpdateOperationsInput | string
  expiresAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  acceptedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  invitedById?: Prisma.StringFieldUpdateOperationsInput | string
  userProfileId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type OperatorInvitationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  operatorId?: boolean
  username?: boolean
  role?: boolean
  token?: boolean
  expiresAt?: boolean
  acceptedAt?: boolean
  invitedById?: boolean
  userProfileId?: boolean
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operatorInvitation"]>

export type OperatorInvitationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  operatorId?: boolean
  username?: boolean
  role?: boolean
  token?: boolean
  expiresAt?: boolean
  acceptedAt?: boolean
  invitedById?: boolean
  userProfileId?: boolean
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operatorInvitation"]>

export type OperatorInvitationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  operatorId?: boolean
  username?: boolean
  role?: boolean
  token?: boolean
  expiresAt?: boolean
  acceptedAt?: boolean
  invitedById?: boolean
  userProfileId?: boolean
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operatorInvitation"]>

export type OperatorInvitationSelectScalar = {
  id?: boolean
  operatorId?: boolean
  username?: boolean
  role?: boolean
  token?: boolean
  expiresAt?: boolean
  acceptedAt?: boolean
  invitedById?: boolean
  userProfileId?: boolean
}

export type OperatorInvitationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "operatorId" | "username" | "role" | "token" | "expiresAt" | "acceptedAt" | "invitedById" | "userProfileId", ExtArgs["result"]["operatorInvitation"]>
export type OperatorInvitationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}
export type OperatorInvitationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}
export type OperatorInvitationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  operator?: boolean | Prisma.OperatorDefaultArgs<ExtArgs>
  invitedUser?: boolean | Prisma.UserProfileDefaultArgs<ExtArgs>
}

export type $OperatorInvitationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "OperatorInvitation"
  objects: {
    operator: Prisma.$OperatorPayload<ExtArgs>
    invitedUser: Prisma.$UserProfilePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    operatorId: string
    username: string
    role: $Enums.Role
    token: string
    expiresAt: Date
    acceptedAt: Date | null
    invitedById: string
    userProfileId: string | null
  }, ExtArgs["result"]["operatorInvitation"]>
  composites: {}
}

export type OperatorInvitationGetPayload<S extends boolean | null | undefined | OperatorInvitationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload, S>

export type OperatorInvitationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OperatorInvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OperatorInvitationCountAggregateInputType | true
  }

export interface OperatorInvitationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OperatorInvitation'], meta: { name: 'OperatorInvitation' } }
  /**
   * Find zero or one OperatorInvitation that matches the filter.
   * @param {OperatorInvitationFindUniqueArgs} args - Arguments to find a OperatorInvitation
   * @example
   * // Get one OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OperatorInvitationFindUniqueArgs>(args: Prisma.SelectSubset<T, OperatorInvitationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one OperatorInvitation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OperatorInvitationFindUniqueOrThrowArgs} args - Arguments to find a OperatorInvitation
   * @example
   * // Get one OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OperatorInvitationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OperatorInvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OperatorInvitation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationFindFirstArgs} args - Arguments to find a OperatorInvitation
   * @example
   * // Get one OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OperatorInvitationFindFirstArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationFindFirstArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OperatorInvitation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationFindFirstOrThrowArgs} args - Arguments to find a OperatorInvitation
   * @example
   * // Get one OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OperatorInvitationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more OperatorInvitations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OperatorInvitations
   * const operatorInvitations = await prisma.operatorInvitation.findMany()
   * 
   * // Get first 10 OperatorInvitations
   * const operatorInvitations = await prisma.operatorInvitation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const operatorInvitationWithIdOnly = await prisma.operatorInvitation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OperatorInvitationFindManyArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a OperatorInvitation.
   * @param {OperatorInvitationCreateArgs} args - Arguments to create a OperatorInvitation.
   * @example
   * // Create one OperatorInvitation
   * const OperatorInvitation = await prisma.operatorInvitation.create({
   *   data: {
   *     // ... data to create a OperatorInvitation
   *   }
   * })
   * 
   */
  create<T extends OperatorInvitationCreateArgs>(args: Prisma.SelectSubset<T, OperatorInvitationCreateArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many OperatorInvitations.
   * @param {OperatorInvitationCreateManyArgs} args - Arguments to create many OperatorInvitations.
   * @example
   * // Create many OperatorInvitations
   * const operatorInvitation = await prisma.operatorInvitation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OperatorInvitationCreateManyArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many OperatorInvitations and returns the data saved in the database.
   * @param {OperatorInvitationCreateManyAndReturnArgs} args - Arguments to create many OperatorInvitations.
   * @example
   * // Create many OperatorInvitations
   * const operatorInvitation = await prisma.operatorInvitation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many OperatorInvitations and only return the `id`
   * const operatorInvitationWithIdOnly = await prisma.operatorInvitation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OperatorInvitationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a OperatorInvitation.
   * @param {OperatorInvitationDeleteArgs} args - Arguments to delete one OperatorInvitation.
   * @example
   * // Delete one OperatorInvitation
   * const OperatorInvitation = await prisma.operatorInvitation.delete({
   *   where: {
   *     // ... filter to delete one OperatorInvitation
   *   }
   * })
   * 
   */
  delete<T extends OperatorInvitationDeleteArgs>(args: Prisma.SelectSubset<T, OperatorInvitationDeleteArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one OperatorInvitation.
   * @param {OperatorInvitationUpdateArgs} args - Arguments to update one OperatorInvitation.
   * @example
   * // Update one OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OperatorInvitationUpdateArgs>(args: Prisma.SelectSubset<T, OperatorInvitationUpdateArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more OperatorInvitations.
   * @param {OperatorInvitationDeleteManyArgs} args - Arguments to filter OperatorInvitations to delete.
   * @example
   * // Delete a few OperatorInvitations
   * const { count } = await prisma.operatorInvitation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OperatorInvitationDeleteManyArgs>(args?: Prisma.SelectSubset<T, OperatorInvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OperatorInvitations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OperatorInvitations
   * const operatorInvitation = await prisma.operatorInvitation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OperatorInvitationUpdateManyArgs>(args: Prisma.SelectSubset<T, OperatorInvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OperatorInvitations and returns the data updated in the database.
   * @param {OperatorInvitationUpdateManyAndReturnArgs} args - Arguments to update many OperatorInvitations.
   * @example
   * // Update many OperatorInvitations
   * const operatorInvitation = await prisma.operatorInvitation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more OperatorInvitations and only return the `id`
   * const operatorInvitationWithIdOnly = await prisma.operatorInvitation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OperatorInvitationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OperatorInvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one OperatorInvitation.
   * @param {OperatorInvitationUpsertArgs} args - Arguments to update or create a OperatorInvitation.
   * @example
   * // Update or create a OperatorInvitation
   * const operatorInvitation = await prisma.operatorInvitation.upsert({
   *   create: {
   *     // ... data to create a OperatorInvitation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OperatorInvitation we want to update
   *   }
   * })
   */
  upsert<T extends OperatorInvitationUpsertArgs>(args: Prisma.SelectSubset<T, OperatorInvitationUpsertArgs<ExtArgs>>): Prisma.Prisma__OperatorInvitationClient<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of OperatorInvitations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationCountArgs} args - Arguments to filter OperatorInvitations to count.
   * @example
   * // Count the number of OperatorInvitations
   * const count = await prisma.operatorInvitation.count({
   *   where: {
   *     // ... the filter for the OperatorInvitations we want to count
   *   }
   * })
  **/
  count<T extends OperatorInvitationCountArgs>(
    args?: Prisma.Subset<T, OperatorInvitationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OperatorInvitationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a OperatorInvitation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OperatorInvitationAggregateArgs>(args: Prisma.Subset<T, OperatorInvitationAggregateArgs>): Prisma.PrismaPromise<GetOperatorInvitationAggregateType<T>>

  /**
   * Group by OperatorInvitation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorInvitationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OperatorInvitationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OperatorInvitationGroupByArgs['orderBy'] }
      : { orderBy?: OperatorInvitationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OperatorInvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperatorInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the OperatorInvitation model
 */
readonly fields: OperatorInvitationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OperatorInvitation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OperatorInvitationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  operator<T extends Prisma.OperatorDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OperatorDefaultArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  invitedUser<T extends Prisma.UserProfileDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserProfileDefaultArgs<ExtArgs>>): Prisma.Prisma__UserProfileClient<runtime.Types.Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the OperatorInvitation model
 */
export interface OperatorInvitationFieldRefs {
  readonly id: Prisma.FieldRef<"OperatorInvitation", 'String'>
  readonly operatorId: Prisma.FieldRef<"OperatorInvitation", 'String'>
  readonly username: Prisma.FieldRef<"OperatorInvitation", 'String'>
  readonly role: Prisma.FieldRef<"OperatorInvitation", 'Role'>
  readonly token: Prisma.FieldRef<"OperatorInvitation", 'String'>
  readonly expiresAt: Prisma.FieldRef<"OperatorInvitation", 'DateTime'>
  readonly acceptedAt: Prisma.FieldRef<"OperatorInvitation", 'DateTime'>
  readonly invitedById: Prisma.FieldRef<"OperatorInvitation", 'String'>
  readonly userProfileId: Prisma.FieldRef<"OperatorInvitation", 'String'>
}
    

// Custom InputTypes
/**
 * OperatorInvitation findUnique
 */
export type OperatorInvitationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OperatorInvitation to fetch.
   */
  where: Prisma.OperatorInvitationWhereUniqueInput
}

/**
 * OperatorInvitation findUniqueOrThrow
 */
export type OperatorInvitationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OperatorInvitation to fetch.
   */
  where: Prisma.OperatorInvitationWhereUniqueInput
}

/**
 * OperatorInvitation findFirst
 */
export type OperatorInvitationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OperatorInvitation to fetch.
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OperatorInvitations to fetch.
   */
  orderBy?: Prisma.OperatorInvitationOrderByWithRelationInput | Prisma.OperatorInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OperatorInvitations.
   */
  cursor?: Prisma.OperatorInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OperatorInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OperatorInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OperatorInvitations.
   */
  distinct?: Prisma.OperatorInvitationScalarFieldEnum | Prisma.OperatorInvitationScalarFieldEnum[]
}

/**
 * OperatorInvitation findFirstOrThrow
 */
export type OperatorInvitationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OperatorInvitation to fetch.
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OperatorInvitations to fetch.
   */
  orderBy?: Prisma.OperatorInvitationOrderByWithRelationInput | Prisma.OperatorInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OperatorInvitations.
   */
  cursor?: Prisma.OperatorInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OperatorInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OperatorInvitations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OperatorInvitations.
   */
  distinct?: Prisma.OperatorInvitationScalarFieldEnum | Prisma.OperatorInvitationScalarFieldEnum[]
}

/**
 * OperatorInvitation findMany
 */
export type OperatorInvitationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter, which OperatorInvitations to fetch.
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OperatorInvitations to fetch.
   */
  orderBy?: Prisma.OperatorInvitationOrderByWithRelationInput | Prisma.OperatorInvitationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing OperatorInvitations.
   */
  cursor?: Prisma.OperatorInvitationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OperatorInvitations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OperatorInvitations.
   */
  skip?: number
  distinct?: Prisma.OperatorInvitationScalarFieldEnum | Prisma.OperatorInvitationScalarFieldEnum[]
}

/**
 * OperatorInvitation create
 */
export type OperatorInvitationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * The data needed to create a OperatorInvitation.
   */
  data: Prisma.XOR<Prisma.OperatorInvitationCreateInput, Prisma.OperatorInvitationUncheckedCreateInput>
}

/**
 * OperatorInvitation createMany
 */
export type OperatorInvitationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many OperatorInvitations.
   */
  data: Prisma.OperatorInvitationCreateManyInput | Prisma.OperatorInvitationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * OperatorInvitation createManyAndReturn
 */
export type OperatorInvitationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * The data used to create many OperatorInvitations.
   */
  data: Prisma.OperatorInvitationCreateManyInput | Prisma.OperatorInvitationCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * OperatorInvitation update
 */
export type OperatorInvitationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * The data needed to update a OperatorInvitation.
   */
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateInput, Prisma.OperatorInvitationUncheckedUpdateInput>
  /**
   * Choose, which OperatorInvitation to update.
   */
  where: Prisma.OperatorInvitationWhereUniqueInput
}

/**
 * OperatorInvitation updateMany
 */
export type OperatorInvitationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update OperatorInvitations.
   */
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateManyMutationInput, Prisma.OperatorInvitationUncheckedUpdateManyInput>
  /**
   * Filter which OperatorInvitations to update
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * Limit how many OperatorInvitations to update.
   */
  limit?: number
}

/**
 * OperatorInvitation updateManyAndReturn
 */
export type OperatorInvitationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * The data used to update OperatorInvitations.
   */
  data: Prisma.XOR<Prisma.OperatorInvitationUpdateManyMutationInput, Prisma.OperatorInvitationUncheckedUpdateManyInput>
  /**
   * Filter which OperatorInvitations to update
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * Limit how many OperatorInvitations to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * OperatorInvitation upsert
 */
export type OperatorInvitationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * The filter to search for the OperatorInvitation to update in case it exists.
   */
  where: Prisma.OperatorInvitationWhereUniqueInput
  /**
   * In case the OperatorInvitation found by the `where` argument doesn't exist, create a new OperatorInvitation with this data.
   */
  create: Prisma.XOR<Prisma.OperatorInvitationCreateInput, Prisma.OperatorInvitationUncheckedCreateInput>
  /**
   * In case the OperatorInvitation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OperatorInvitationUpdateInput, Prisma.OperatorInvitationUncheckedUpdateInput>
}

/**
 * OperatorInvitation delete
 */
export type OperatorInvitationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  /**
   * Filter which OperatorInvitation to delete.
   */
  where: Prisma.OperatorInvitationWhereUniqueInput
}

/**
 * OperatorInvitation deleteMany
 */
export type OperatorInvitationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OperatorInvitations to delete
   */
  where?: Prisma.OperatorInvitationWhereInput
  /**
   * Limit how many OperatorInvitations to delete.
   */
  limit?: number
}

/**
 * OperatorInvitation without action
 */
export type OperatorInvitationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
}
