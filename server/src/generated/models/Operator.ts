
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Operator` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Operator
 * 
 */
export type OperatorModel = runtime.Types.Result.DefaultSelection<Prisma.$OperatorPayload>

export type AggregateOperator = {
  _count: OperatorCountAggregateOutputType | null
  _min: OperatorMinAggregateOutputType | null
  _max: OperatorMaxAggregateOutputType | null
}

export type OperatorMinAggregateOutputType = {
  id: string | null
  name: string | null
  operatorSecret: string | null
  operatorAccess: string | null
  callbackUrl: string | null
  active: boolean | null
  description: string | null
  lastUsedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
  ownerId: string | null
}

export type OperatorMaxAggregateOutputType = {
  id: string | null
  name: string | null
  operatorSecret: string | null
  operatorAccess: string | null
  callbackUrl: string | null
  active: boolean | null
  description: string | null
  lastUsedAt: Date | null
  createdAt: Date | null
  updatedAt: Date | null
  ownerId: string | null
}

export type OperatorCountAggregateOutputType = {
  id: number
  name: number
  operatorSecret: number
  operatorAccess: number
  callbackUrl: number
  active: number
  permissions: number
  ips: number
  description: number
  lastUsedAt: number
  createdAt: number
  updatedAt: number
  ownerId: number
  acceptedPayments: number
  _all: number
}


export type OperatorMinAggregateInputType = {
  id?: true
  name?: true
  operatorSecret?: true
  operatorAccess?: true
  callbackUrl?: true
  active?: true
  description?: true
  lastUsedAt?: true
  createdAt?: true
  updatedAt?: true
  ownerId?: true
}

export type OperatorMaxAggregateInputType = {
  id?: true
  name?: true
  operatorSecret?: true
  operatorAccess?: true
  callbackUrl?: true
  active?: true
  description?: true
  lastUsedAt?: true
  createdAt?: true
  updatedAt?: true
  ownerId?: true
}

export type OperatorCountAggregateInputType = {
  id?: true
  name?: true
  operatorSecret?: true
  operatorAccess?: true
  callbackUrl?: true
  active?: true
  permissions?: true
  ips?: true
  description?: true
  lastUsedAt?: true
  createdAt?: true
  updatedAt?: true
  ownerId?: true
  acceptedPayments?: true
  _all?: true
}

export type OperatorAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operator to aggregate.
   */
  where?: Prisma.OperatorWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operators to fetch.
   */
  orderBy?: Prisma.OperatorOrderByWithRelationInput | Prisma.OperatorOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OperatorWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operators from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operators.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Operators
  **/
  _count?: true | OperatorCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OperatorMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OperatorMaxAggregateInputType
}

export type GetOperatorAggregateType<T extends OperatorAggregateArgs> = {
      [P in keyof T & keyof AggregateOperator]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOperator[P]>
    : Prisma.GetScalarType<T[P], AggregateOperator[P]>
}




export type OperatorGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OperatorWhereInput
  orderBy?: Prisma.OperatorOrderByWithAggregationInput | Prisma.OperatorOrderByWithAggregationInput[]
  by: Prisma.OperatorScalarFieldEnum[] | Prisma.OperatorScalarFieldEnum
  having?: Prisma.OperatorScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OperatorCountAggregateInputType | true
  _min?: OperatorMinAggregateInputType
  _max?: OperatorMaxAggregateInputType
}

export type OperatorGroupByOutputType = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active: boolean
  permissions: $Enums.KeyMode[]
  ips: string[]
  description: string | null
  lastUsedAt: Date | null
  createdAt: Date
  updatedAt: Date
  ownerId: string | null
  acceptedPayments: $Enums.PaymentMethod[]
  _count: OperatorCountAggregateOutputType | null
  _min: OperatorMinAggregateOutputType | null
  _max: OperatorMaxAggregateOutputType | null
}

type GetOperatorGroupByPayload<T extends OperatorGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OperatorGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OperatorGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OperatorGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OperatorGroupByOutputType[P]>
      }
    >
  > 



export type OperatorWhereInput = {
  AND?: Prisma.OperatorWhereInput | Prisma.OperatorWhereInput[]
  OR?: Prisma.OperatorWhereInput[]
  NOT?: Prisma.OperatorWhereInput | Prisma.OperatorWhereInput[]
  id?: Prisma.StringFilter<"Operator"> | string
  name?: Prisma.StringFilter<"Operator"> | string
  operatorSecret?: Prisma.StringFilter<"Operator"> | string
  operatorAccess?: Prisma.StringFilter<"Operator"> | string
  callbackUrl?: Prisma.StringFilter<"Operator"> | string
  active?: Prisma.BoolFilter<"Operator"> | boolean
  permissions?: Prisma.EnumKeyModeNullableListFilter<"Operator">
  ips?: Prisma.StringNullableListFilter<"Operator">
  description?: Prisma.StringNullableFilter<"Operator"> | string | null
  lastUsedAt?: Prisma.DateTimeNullableFilter<"Operator"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"Operator"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operator"> | Date | string
  ownerId?: Prisma.StringNullableFilter<"Operator"> | string | null
  acceptedPayments?: Prisma.EnumPaymentMethodNullableListFilter<"Operator">
  gameLaunchLinks?: Prisma.GameLaunchLinkListRelationFilter
  games?: Prisma.GameListRelationFilter
  invitations?: Prisma.OperatorInvitationListRelationFilter
  products?: Prisma.ProductListRelationFilter
  transactions?: Prisma.TransactionListRelationFilter
  wallets?: Prisma.WalletListRelationFilter
}

export type OperatorOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  operatorSecret?: Prisma.SortOrder
  operatorAccess?: Prisma.SortOrder
  callbackUrl?: Prisma.SortOrder
  active?: Prisma.SortOrder
  permissions?: Prisma.SortOrder
  ips?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  lastUsedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ownerId?: Prisma.SortOrderInput | Prisma.SortOrder
  acceptedPayments?: Prisma.SortOrder
  gameLaunchLinks?: Prisma.GameLaunchLinkOrderByRelationAggregateInput
  games?: Prisma.GameOrderByRelationAggregateInput
  invitations?: Prisma.OperatorInvitationOrderByRelationAggregateInput
  products?: Prisma.ProductOrderByRelationAggregateInput
  transactions?: Prisma.TransactionOrderByRelationAggregateInput
  wallets?: Prisma.WalletOrderByRelationAggregateInput
}

export type OperatorWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.OperatorWhereInput | Prisma.OperatorWhereInput[]
  OR?: Prisma.OperatorWhereInput[]
  NOT?: Prisma.OperatorWhereInput | Prisma.OperatorWhereInput[]
  operatorSecret?: Prisma.StringFilter<"Operator"> | string
  operatorAccess?: Prisma.StringFilter<"Operator"> | string
  callbackUrl?: Prisma.StringFilter<"Operator"> | string
  active?: Prisma.BoolFilter<"Operator"> | boolean
  permissions?: Prisma.EnumKeyModeNullableListFilter<"Operator">
  ips?: Prisma.StringNullableListFilter<"Operator">
  description?: Prisma.StringNullableFilter<"Operator"> | string | null
  lastUsedAt?: Prisma.DateTimeNullableFilter<"Operator"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"Operator"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operator"> | Date | string
  ownerId?: Prisma.StringNullableFilter<"Operator"> | string | null
  acceptedPayments?: Prisma.EnumPaymentMethodNullableListFilter<"Operator">
  gameLaunchLinks?: Prisma.GameLaunchLinkListRelationFilter
  games?: Prisma.GameListRelationFilter
  invitations?: Prisma.OperatorInvitationListRelationFilter
  products?: Prisma.ProductListRelationFilter
  transactions?: Prisma.TransactionListRelationFilter
  wallets?: Prisma.WalletListRelationFilter
}, "id" | "name">

export type OperatorOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  operatorSecret?: Prisma.SortOrder
  operatorAccess?: Prisma.SortOrder
  callbackUrl?: Prisma.SortOrder
  active?: Prisma.SortOrder
  permissions?: Prisma.SortOrder
  ips?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  lastUsedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ownerId?: Prisma.SortOrderInput | Prisma.SortOrder
  acceptedPayments?: Prisma.SortOrder
  _count?: Prisma.OperatorCountOrderByAggregateInput
  _max?: Prisma.OperatorMaxOrderByAggregateInput
  _min?: Prisma.OperatorMinOrderByAggregateInput
}

export type OperatorScalarWhereWithAggregatesInput = {
  AND?: Prisma.OperatorScalarWhereWithAggregatesInput | Prisma.OperatorScalarWhereWithAggregatesInput[]
  OR?: Prisma.OperatorScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OperatorScalarWhereWithAggregatesInput | Prisma.OperatorScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Operator"> | string
  name?: Prisma.StringWithAggregatesFilter<"Operator"> | string
  operatorSecret?: Prisma.StringWithAggregatesFilter<"Operator"> | string
  operatorAccess?: Prisma.StringWithAggregatesFilter<"Operator"> | string
  callbackUrl?: Prisma.StringWithAggregatesFilter<"Operator"> | string
  active?: Prisma.BoolWithAggregatesFilter<"Operator"> | boolean
  permissions?: Prisma.EnumKeyModeNullableListFilter<"Operator">
  ips?: Prisma.StringNullableListFilter<"Operator">
  description?: Prisma.StringNullableWithAggregatesFilter<"Operator"> | string | null
  lastUsedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Operator"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Operator"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Operator"> | Date | string
  ownerId?: Prisma.StringNullableWithAggregatesFilter<"Operator"> | string | null
  acceptedPayments?: Prisma.EnumPaymentMethodNullableListFilter<"Operator">
}

export type OperatorCreateInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateManyInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
}

export type OperatorUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
}

export type OperatorUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
}

export type OperatorNullableScalarRelationFilter = {
  is?: Prisma.OperatorWhereInput | null
  isNot?: Prisma.OperatorWhereInput | null
}

export type OperatorScalarRelationFilter = {
  is?: Prisma.OperatorWhereInput
  isNot?: Prisma.OperatorWhereInput
}

export type EnumKeyModeNullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.KeyMode[] | Prisma.ListEnumKeyModeFieldRefInput<$PrismaModel> | null
  has?: $Enums.KeyMode | Prisma.EnumKeyModeFieldRefInput<$PrismaModel> | null
  hasEvery?: $Enums.KeyMode[] | Prisma.ListEnumKeyModeFieldRefInput<$PrismaModel>
  hasSome?: $Enums.KeyMode[] | Prisma.ListEnumKeyModeFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type EnumPaymentMethodNullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
  has?: $Enums.PaymentMethod | Prisma.EnumPaymentMethodFieldRefInput<$PrismaModel> | null
  hasEvery?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel>
  hasSome?: $Enums.PaymentMethod[] | Prisma.ListEnumPaymentMethodFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type OperatorCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  operatorSecret?: Prisma.SortOrder
  operatorAccess?: Prisma.SortOrder
  callbackUrl?: Prisma.SortOrder
  active?: Prisma.SortOrder
  permissions?: Prisma.SortOrder
  ips?: Prisma.SortOrder
  description?: Prisma.SortOrder
  lastUsedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
  acceptedPayments?: Prisma.SortOrder
}

export type OperatorMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  operatorSecret?: Prisma.SortOrder
  operatorAccess?: Prisma.SortOrder
  callbackUrl?: Prisma.SortOrder
  active?: Prisma.SortOrder
  description?: Prisma.SortOrder
  lastUsedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
}

export type OperatorMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  operatorSecret?: Prisma.SortOrder
  operatorAccess?: Prisma.SortOrder
  callbackUrl?: Prisma.SortOrder
  active?: Prisma.SortOrder
  description?: Prisma.SortOrder
  lastUsedAt?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ownerId?: Prisma.SortOrder
}

export type OperatorCreateNestedOneWithoutGamesInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutGamesInput, Prisma.OperatorUncheckedCreateWithoutGamesInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutGamesInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneWithoutGamesNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutGamesInput, Prisma.OperatorUncheckedCreateWithoutGamesInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutGamesInput
  upsert?: Prisma.OperatorUpsertWithoutGamesInput
  disconnect?: Prisma.OperatorWhereInput | boolean
  delete?: Prisma.OperatorWhereInput | boolean
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutGamesInput, Prisma.OperatorUpdateWithoutGamesInput>, Prisma.OperatorUncheckedUpdateWithoutGamesInput>
}

export type OperatorCreateNestedOneWithoutGameLaunchLinksInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedCreateWithoutGameLaunchLinksInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutGameLaunchLinksInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneRequiredWithoutGameLaunchLinksNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedCreateWithoutGameLaunchLinksInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutGameLaunchLinksInput
  upsert?: Prisma.OperatorUpsertWithoutGameLaunchLinksInput
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutGameLaunchLinksInput, Prisma.OperatorUpdateWithoutGameLaunchLinksInput>, Prisma.OperatorUncheckedUpdateWithoutGameLaunchLinksInput>
}

export type OperatorCreatepermissionsInput = {
  set: $Enums.KeyMode[]
}

export type OperatorCreateipsInput = {
  set: string[]
}

export type OperatorCreateacceptedPaymentsInput = {
  set: $Enums.PaymentMethod[]
}

export type OperatorUpdatepermissionsInput = {
  set?: $Enums.KeyMode[]
  push?: $Enums.KeyMode | $Enums.KeyMode[]
}

export type OperatorUpdateipsInput = {
  set?: string[]
  push?: string | string[]
}

export type OperatorUpdateacceptedPaymentsInput = {
  set?: $Enums.PaymentMethod[]
  push?: $Enums.PaymentMethod | $Enums.PaymentMethod[]
}

export type OperatorCreateNestedOneWithoutInvitationsInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutInvitationsInput, Prisma.OperatorUncheckedCreateWithoutInvitationsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutInvitationsInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneRequiredWithoutInvitationsNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutInvitationsInput, Prisma.OperatorUncheckedCreateWithoutInvitationsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutInvitationsInput
  upsert?: Prisma.OperatorUpsertWithoutInvitationsInput
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutInvitationsInput, Prisma.OperatorUpdateWithoutInvitationsInput>, Prisma.OperatorUncheckedUpdateWithoutInvitationsInput>
}

export type OperatorCreateNestedOneWithoutProductsInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutProductsInput, Prisma.OperatorUncheckedCreateWithoutProductsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutProductsInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneWithoutProductsNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutProductsInput, Prisma.OperatorUncheckedCreateWithoutProductsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutProductsInput
  upsert?: Prisma.OperatorUpsertWithoutProductsInput
  disconnect?: Prisma.OperatorWhereInput | boolean
  delete?: Prisma.OperatorWhereInput | boolean
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutProductsInput, Prisma.OperatorUpdateWithoutProductsInput>, Prisma.OperatorUncheckedUpdateWithoutProductsInput>
}

export type OperatorCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutTransactionsInput, Prisma.OperatorUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutTransactionsInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutTransactionsInput, Prisma.OperatorUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutTransactionsInput
  upsert?: Prisma.OperatorUpsertWithoutTransactionsInput
  disconnect?: Prisma.OperatorWhereInput | boolean
  delete?: Prisma.OperatorWhereInput | boolean
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutTransactionsInput, Prisma.OperatorUpdateWithoutTransactionsInput>, Prisma.OperatorUncheckedUpdateWithoutTransactionsInput>
}

export type OperatorCreateNestedOneWithoutWalletsInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutWalletsInput, Prisma.OperatorUncheckedCreateWithoutWalletsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutWalletsInput
  connect?: Prisma.OperatorWhereUniqueInput
}

export type OperatorUpdateOneRequiredWithoutWalletsNestedInput = {
  create?: Prisma.XOR<Prisma.OperatorCreateWithoutWalletsInput, Prisma.OperatorUncheckedCreateWithoutWalletsInput>
  connectOrCreate?: Prisma.OperatorCreateOrConnectWithoutWalletsInput
  upsert?: Prisma.OperatorUpsertWithoutWalletsInput
  connect?: Prisma.OperatorWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperatorUpdateToOneWithWhereWithoutWalletsInput, Prisma.OperatorUpdateWithoutWalletsInput>, Prisma.OperatorUncheckedUpdateWithoutWalletsInput>
}

export type OperatorCreateWithoutGamesInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutGamesInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutGamesInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutGamesInput, Prisma.OperatorUncheckedCreateWithoutGamesInput>
}

export type OperatorUpsertWithoutGamesInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutGamesInput, Prisma.OperatorUncheckedUpdateWithoutGamesInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutGamesInput, Prisma.OperatorUncheckedCreateWithoutGamesInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutGamesInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutGamesInput, Prisma.OperatorUncheckedUpdateWithoutGamesInput>
}

export type OperatorUpdateWithoutGamesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutGamesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateWithoutGameLaunchLinksInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutGameLaunchLinksInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutGameLaunchLinksInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedCreateWithoutGameLaunchLinksInput>
}

export type OperatorUpsertWithoutGameLaunchLinksInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedUpdateWithoutGameLaunchLinksInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedCreateWithoutGameLaunchLinksInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutGameLaunchLinksInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutGameLaunchLinksInput, Prisma.OperatorUncheckedUpdateWithoutGameLaunchLinksInput>
}

export type OperatorUpdateWithoutGameLaunchLinksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutGameLaunchLinksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateWithoutInvitationsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutInvitationsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutInvitationsInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutInvitationsInput, Prisma.OperatorUncheckedCreateWithoutInvitationsInput>
}

export type OperatorUpsertWithoutInvitationsInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutInvitationsInput, Prisma.OperatorUncheckedUpdateWithoutInvitationsInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutInvitationsInput, Prisma.OperatorUncheckedCreateWithoutInvitationsInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutInvitationsInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutInvitationsInput, Prisma.OperatorUncheckedUpdateWithoutInvitationsInput>
}

export type OperatorUpdateWithoutInvitationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutInvitationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateWithoutProductsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutProductsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutProductsInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutProductsInput, Prisma.OperatorUncheckedCreateWithoutProductsInput>
}

export type OperatorUpsertWithoutProductsInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutProductsInput, Prisma.OperatorUncheckedUpdateWithoutProductsInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutProductsInput, Prisma.OperatorUncheckedCreateWithoutProductsInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutProductsInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutProductsInput, Prisma.OperatorUncheckedUpdateWithoutProductsInput>
}

export type OperatorUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateWithoutTransactionsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutTransactionsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  wallets?: Prisma.WalletUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutTransactionsInput, Prisma.OperatorUncheckedCreateWithoutTransactionsInput>
}

export type OperatorUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutTransactionsInput, Prisma.OperatorUncheckedUpdateWithoutTransactionsInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutTransactionsInput, Prisma.OperatorUncheckedCreateWithoutTransactionsInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutTransactionsInput, Prisma.OperatorUncheckedUpdateWithoutTransactionsInput>
}

export type OperatorUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  wallets?: Prisma.WalletUncheckedUpdateManyWithoutOperatorNestedInput
}

export type OperatorCreateWithoutWalletsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionCreateNestedManyWithoutOperatorInput
}

export type OperatorUncheckedCreateWithoutWalletsInput = {
  id: string
  name: string
  operatorSecret: string
  operatorAccess: string
  callbackUrl: string
  active?: boolean
  permissions?: Prisma.OperatorCreatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorCreateipsInput | string[]
  description?: string | null
  lastUsedAt?: Date | string | null
  createdAt?: Date | string
  updatedAt: Date | string
  ownerId?: string | null
  acceptedPayments?: Prisma.OperatorCreateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedCreateNestedManyWithoutOperatorInput
  games?: Prisma.GameUncheckedCreateNestedManyWithoutOperatorInput
  invitations?: Prisma.OperatorInvitationUncheckedCreateNestedManyWithoutOperatorInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutOperatorInput
  transactions?: Prisma.TransactionUncheckedCreateNestedManyWithoutOperatorInput
}

export type OperatorCreateOrConnectWithoutWalletsInput = {
  where: Prisma.OperatorWhereUniqueInput
  create: Prisma.XOR<Prisma.OperatorCreateWithoutWalletsInput, Prisma.OperatorUncheckedCreateWithoutWalletsInput>
}

export type OperatorUpsertWithoutWalletsInput = {
  update: Prisma.XOR<Prisma.OperatorUpdateWithoutWalletsInput, Prisma.OperatorUncheckedUpdateWithoutWalletsInput>
  create: Prisma.XOR<Prisma.OperatorCreateWithoutWalletsInput, Prisma.OperatorUncheckedCreateWithoutWalletsInput>
  where?: Prisma.OperatorWhereInput
}

export type OperatorUpdateToOneWithWhereWithoutWalletsInput = {
  where?: Prisma.OperatorWhereInput
  data: Prisma.XOR<Prisma.OperatorUpdateWithoutWalletsInput, Prisma.OperatorUncheckedUpdateWithoutWalletsInput>
}

export type OperatorUpdateWithoutWalletsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUpdateManyWithoutOperatorNestedInput
}

export type OperatorUncheckedUpdateWithoutWalletsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  operatorSecret?: Prisma.StringFieldUpdateOperationsInput | string
  operatorAccess?: Prisma.StringFieldUpdateOperationsInput | string
  callbackUrl?: Prisma.StringFieldUpdateOperationsInput | string
  active?: Prisma.BoolFieldUpdateOperationsInput | boolean
  permissions?: Prisma.OperatorUpdatepermissionsInput | $Enums.KeyMode[]
  ips?: Prisma.OperatorUpdateipsInput | string[]
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  acceptedPayments?: Prisma.OperatorUpdateacceptedPaymentsInput | $Enums.PaymentMethod[]
  gameLaunchLinks?: Prisma.GameLaunchLinkUncheckedUpdateManyWithoutOperatorNestedInput
  games?: Prisma.GameUncheckedUpdateManyWithoutOperatorNestedInput
  invitations?: Prisma.OperatorInvitationUncheckedUpdateManyWithoutOperatorNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutOperatorNestedInput
  transactions?: Prisma.TransactionUncheckedUpdateManyWithoutOperatorNestedInput
}


/**
 * Count Type OperatorCountOutputType
 */

export type OperatorCountOutputType = {
  gameLaunchLinks: number
  games: number
  invitations: number
  products: number
  transactions: number
  wallets: number
}

export type OperatorCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  gameLaunchLinks?: boolean | OperatorCountOutputTypeCountGameLaunchLinksArgs
  games?: boolean | OperatorCountOutputTypeCountGamesArgs
  invitations?: boolean | OperatorCountOutputTypeCountInvitationsArgs
  products?: boolean | OperatorCountOutputTypeCountProductsArgs
  transactions?: boolean | OperatorCountOutputTypeCountTransactionsArgs
  wallets?: boolean | OperatorCountOutputTypeCountWalletsArgs
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorCountOutputType
   */
  select?: Prisma.OperatorCountOutputTypeSelect<ExtArgs> | null
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountGameLaunchLinksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GameLaunchLinkWhereInput
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountGamesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.GameWhereInput
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountInvitationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OperatorInvitationWhereInput
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountProductsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductWhereInput
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountTransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TransactionWhereInput
}

/**
 * OperatorCountOutputType without action
 */
export type OperatorCountOutputTypeCountWalletsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WalletWhereInput
}


export type OperatorSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  operatorSecret?: boolean
  operatorAccess?: boolean
  callbackUrl?: boolean
  active?: boolean
  permissions?: boolean
  ips?: boolean
  description?: boolean
  lastUsedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ownerId?: boolean
  acceptedPayments?: boolean
  gameLaunchLinks?: boolean | Prisma.Operator$gameLaunchLinksArgs<ExtArgs>
  games?: boolean | Prisma.Operator$gamesArgs<ExtArgs>
  invitations?: boolean | Prisma.Operator$invitationsArgs<ExtArgs>
  products?: boolean | Prisma.Operator$productsArgs<ExtArgs>
  transactions?: boolean | Prisma.Operator$transactionsArgs<ExtArgs>
  wallets?: boolean | Prisma.Operator$walletsArgs<ExtArgs>
  _count?: boolean | Prisma.OperatorCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operator"]>

export type OperatorSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  operatorSecret?: boolean
  operatorAccess?: boolean
  callbackUrl?: boolean
  active?: boolean
  permissions?: boolean
  ips?: boolean
  description?: boolean
  lastUsedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ownerId?: boolean
  acceptedPayments?: boolean
}, ExtArgs["result"]["operator"]>

export type OperatorSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  operatorSecret?: boolean
  operatorAccess?: boolean
  callbackUrl?: boolean
  active?: boolean
  permissions?: boolean
  ips?: boolean
  description?: boolean
  lastUsedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ownerId?: boolean
  acceptedPayments?: boolean
}, ExtArgs["result"]["operator"]>

export type OperatorSelectScalar = {
  id?: boolean
  name?: boolean
  operatorSecret?: boolean
  operatorAccess?: boolean
  callbackUrl?: boolean
  active?: boolean
  permissions?: boolean
  ips?: boolean
  description?: boolean
  lastUsedAt?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ownerId?: boolean
  acceptedPayments?: boolean
}

export type OperatorOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "operatorSecret" | "operatorAccess" | "callbackUrl" | "active" | "permissions" | "ips" | "description" | "lastUsedAt" | "createdAt" | "updatedAt" | "ownerId" | "acceptedPayments", ExtArgs["result"]["operator"]>
export type OperatorInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  gameLaunchLinks?: boolean | Prisma.Operator$gameLaunchLinksArgs<ExtArgs>
  games?: boolean | Prisma.Operator$gamesArgs<ExtArgs>
  invitations?: boolean | Prisma.Operator$invitationsArgs<ExtArgs>
  products?: boolean | Prisma.Operator$productsArgs<ExtArgs>
  transactions?: boolean | Prisma.Operator$transactionsArgs<ExtArgs>
  wallets?: boolean | Prisma.Operator$walletsArgs<ExtArgs>
  _count?: boolean | Prisma.OperatorCountOutputTypeDefaultArgs<ExtArgs>
}
export type OperatorIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type OperatorIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $OperatorPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Operator"
  objects: {
    gameLaunchLinks: Prisma.$GameLaunchLinkPayload<ExtArgs>[]
    games: Prisma.$GamePayload<ExtArgs>[]
    invitations: Prisma.$OperatorInvitationPayload<ExtArgs>[]
    products: Prisma.$ProductPayload<ExtArgs>[]
    transactions: Prisma.$TransactionPayload<ExtArgs>[]
    wallets: Prisma.$WalletPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    operatorSecret: string
    operatorAccess: string
    callbackUrl: string
    active: boolean
    permissions: $Enums.KeyMode[]
    ips: string[]
    description: string | null
    lastUsedAt: Date | null
    createdAt: Date
    updatedAt: Date
    ownerId: string | null
    acceptedPayments: $Enums.PaymentMethod[]
  }, ExtArgs["result"]["operator"]>
  composites: {}
}

export type OperatorGetPayload<S extends boolean | null | undefined | OperatorDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OperatorPayload, S>

export type OperatorCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OperatorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OperatorCountAggregateInputType | true
  }

export interface OperatorDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Operator'], meta: { name: 'Operator' } }
  /**
   * Find zero or one Operator that matches the filter.
   * @param {OperatorFindUniqueArgs} args - Arguments to find a Operator
   * @example
   * // Get one Operator
   * const operator = await prisma.operator.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OperatorFindUniqueArgs>(args: Prisma.SelectSubset<T, OperatorFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Operator that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OperatorFindUniqueOrThrowArgs} args - Arguments to find a Operator
   * @example
   * // Get one Operator
   * const operator = await prisma.operator.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OperatorFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OperatorFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operator that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorFindFirstArgs} args - Arguments to find a Operator
   * @example
   * // Get one Operator
   * const operator = await prisma.operator.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OperatorFindFirstArgs>(args?: Prisma.SelectSubset<T, OperatorFindFirstArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operator that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorFindFirstOrThrowArgs} args - Arguments to find a Operator
   * @example
   * // Get one Operator
   * const operator = await prisma.operator.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OperatorFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OperatorFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Operators that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Operators
   * const operators = await prisma.operator.findMany()
   * 
   * // Get first 10 Operators
   * const operators = await prisma.operator.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const operatorWithIdOnly = await prisma.operator.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OperatorFindManyArgs>(args?: Prisma.SelectSubset<T, OperatorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Operator.
   * @param {OperatorCreateArgs} args - Arguments to create a Operator.
   * @example
   * // Create one Operator
   * const Operator = await prisma.operator.create({
   *   data: {
   *     // ... data to create a Operator
   *   }
   * })
   * 
   */
  create<T extends OperatorCreateArgs>(args: Prisma.SelectSubset<T, OperatorCreateArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Operators.
   * @param {OperatorCreateManyArgs} args - Arguments to create many Operators.
   * @example
   * // Create many Operators
   * const operator = await prisma.operator.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OperatorCreateManyArgs>(args?: Prisma.SelectSubset<T, OperatorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Operators and returns the data saved in the database.
   * @param {OperatorCreateManyAndReturnArgs} args - Arguments to create many Operators.
   * @example
   * // Create many Operators
   * const operator = await prisma.operator.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Operators and only return the `id`
   * const operatorWithIdOnly = await prisma.operator.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OperatorCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OperatorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Operator.
   * @param {OperatorDeleteArgs} args - Arguments to delete one Operator.
   * @example
   * // Delete one Operator
   * const Operator = await prisma.operator.delete({
   *   where: {
   *     // ... filter to delete one Operator
   *   }
   * })
   * 
   */
  delete<T extends OperatorDeleteArgs>(args: Prisma.SelectSubset<T, OperatorDeleteArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Operator.
   * @param {OperatorUpdateArgs} args - Arguments to update one Operator.
   * @example
   * // Update one Operator
   * const operator = await prisma.operator.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OperatorUpdateArgs>(args: Prisma.SelectSubset<T, OperatorUpdateArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Operators.
   * @param {OperatorDeleteManyArgs} args - Arguments to filter Operators to delete.
   * @example
   * // Delete a few Operators
   * const { count } = await prisma.operator.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OperatorDeleteManyArgs>(args?: Prisma.SelectSubset<T, OperatorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Operators.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Operators
   * const operator = await prisma.operator.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OperatorUpdateManyArgs>(args: Prisma.SelectSubset<T, OperatorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Operators and returns the data updated in the database.
   * @param {OperatorUpdateManyAndReturnArgs} args - Arguments to update many Operators.
   * @example
   * // Update many Operators
   * const operator = await prisma.operator.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Operators and only return the `id`
   * const operatorWithIdOnly = await prisma.operator.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OperatorUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OperatorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Operator.
   * @param {OperatorUpsertArgs} args - Arguments to update or create a Operator.
   * @example
   * // Update or create a Operator
   * const operator = await prisma.operator.upsert({
   *   create: {
   *     // ... data to create a Operator
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Operator we want to update
   *   }
   * })
   */
  upsert<T extends OperatorUpsertArgs>(args: Prisma.SelectSubset<T, OperatorUpsertArgs<ExtArgs>>): Prisma.Prisma__OperatorClient<runtime.Types.Result.GetResult<Prisma.$OperatorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Operators.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorCountArgs} args - Arguments to filter Operators to count.
   * @example
   * // Count the number of Operators
   * const count = await prisma.operator.count({
   *   where: {
   *     // ... the filter for the Operators we want to count
   *   }
   * })
  **/
  count<T extends OperatorCountArgs>(
    args?: Prisma.Subset<T, OperatorCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OperatorCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Operator.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OperatorAggregateArgs>(args: Prisma.Subset<T, OperatorAggregateArgs>): Prisma.PrismaPromise<GetOperatorAggregateType<T>>

  /**
   * Group by Operator.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperatorGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OperatorGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OperatorGroupByArgs['orderBy'] }
      : { orderBy?: OperatorGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OperatorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperatorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Operator model
 */
readonly fields: OperatorFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Operator.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OperatorClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  gameLaunchLinks<T extends Prisma.Operator$gameLaunchLinksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$gameLaunchLinksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GameLaunchLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  games<T extends Prisma.Operator$gamesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$gamesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$GamePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  invitations<T extends Prisma.Operator$invitationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperatorInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  products<T extends Prisma.Operator$productsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$productsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  transactions<T extends Prisma.Operator$transactionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  wallets<T extends Prisma.Operator$walletsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operator$walletsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WalletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Operator model
 */
export interface OperatorFieldRefs {
  readonly id: Prisma.FieldRef<"Operator", 'String'>
  readonly name: Prisma.FieldRef<"Operator", 'String'>
  readonly operatorSecret: Prisma.FieldRef<"Operator", 'String'>
  readonly operatorAccess: Prisma.FieldRef<"Operator", 'String'>
  readonly callbackUrl: Prisma.FieldRef<"Operator", 'String'>
  readonly active: Prisma.FieldRef<"Operator", 'Boolean'>
  readonly permissions: Prisma.FieldRef<"Operator", 'KeyMode[]'>
  readonly ips: Prisma.FieldRef<"Operator", 'String[]'>
  readonly description: Prisma.FieldRef<"Operator", 'String'>
  readonly lastUsedAt: Prisma.FieldRef<"Operator", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"Operator", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Operator", 'DateTime'>
  readonly ownerId: Prisma.FieldRef<"Operator", 'String'>
  readonly acceptedPayments: Prisma.FieldRef<"Operator", 'PaymentMethod[]'>
}
    

// Custom InputTypes
/**
 * Operator findUnique
 */
export type OperatorFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter, which Operator to fetch.
   */
  where: Prisma.OperatorWhereUniqueInput
}

/**
 * Operator findUniqueOrThrow
 */
export type OperatorFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter, which Operator to fetch.
   */
  where: Prisma.OperatorWhereUniqueInput
}

/**
 * Operator findFirst
 */
export type OperatorFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter, which Operator to fetch.
   */
  where?: Prisma.OperatorWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operators to fetch.
   */
  orderBy?: Prisma.OperatorOrderByWithRelationInput | Prisma.OperatorOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operators.
   */
  cursor?: Prisma.OperatorWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operators from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operators.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operators.
   */
  distinct?: Prisma.OperatorScalarFieldEnum | Prisma.OperatorScalarFieldEnum[]
}

/**
 * Operator findFirstOrThrow
 */
export type OperatorFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter, which Operator to fetch.
   */
  where?: Prisma.OperatorWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operators to fetch.
   */
  orderBy?: Prisma.OperatorOrderByWithRelationInput | Prisma.OperatorOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operators.
   */
  cursor?: Prisma.OperatorWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operators from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operators.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operators.
   */
  distinct?: Prisma.OperatorScalarFieldEnum | Prisma.OperatorScalarFieldEnum[]
}

/**
 * Operator findMany
 */
export type OperatorFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter, which Operators to fetch.
   */
  where?: Prisma.OperatorWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operators to fetch.
   */
  orderBy?: Prisma.OperatorOrderByWithRelationInput | Prisma.OperatorOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Operators.
   */
  cursor?: Prisma.OperatorWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operators from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operators.
   */
  skip?: number
  distinct?: Prisma.OperatorScalarFieldEnum | Prisma.OperatorScalarFieldEnum[]
}

/**
 * Operator create
 */
export type OperatorCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * The data needed to create a Operator.
   */
  data: Prisma.XOR<Prisma.OperatorCreateInput, Prisma.OperatorUncheckedCreateInput>
}

/**
 * Operator createMany
 */
export type OperatorCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Operators.
   */
  data: Prisma.OperatorCreateManyInput | Prisma.OperatorCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Operator createManyAndReturn
 */
export type OperatorCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * The data used to create many Operators.
   */
  data: Prisma.OperatorCreateManyInput | Prisma.OperatorCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Operator update
 */
export type OperatorUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * The data needed to update a Operator.
   */
  data: Prisma.XOR<Prisma.OperatorUpdateInput, Prisma.OperatorUncheckedUpdateInput>
  /**
   * Choose, which Operator to update.
   */
  where: Prisma.OperatorWhereUniqueInput
}

/**
 * Operator updateMany
 */
export type OperatorUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Operators.
   */
  data: Prisma.XOR<Prisma.OperatorUpdateManyMutationInput, Prisma.OperatorUncheckedUpdateManyInput>
  /**
   * Filter which Operators to update
   */
  where?: Prisma.OperatorWhereInput
  /**
   * Limit how many Operators to update.
   */
  limit?: number
}

/**
 * Operator updateManyAndReturn
 */
export type OperatorUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * The data used to update Operators.
   */
  data: Prisma.XOR<Prisma.OperatorUpdateManyMutationInput, Prisma.OperatorUncheckedUpdateManyInput>
  /**
   * Filter which Operators to update
   */
  where?: Prisma.OperatorWhereInput
  /**
   * Limit how many Operators to update.
   */
  limit?: number
}

/**
 * Operator upsert
 */
export type OperatorUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * The filter to search for the Operator to update in case it exists.
   */
  where: Prisma.OperatorWhereUniqueInput
  /**
   * In case the Operator found by the `where` argument doesn't exist, create a new Operator with this data.
   */
  create: Prisma.XOR<Prisma.OperatorCreateInput, Prisma.OperatorUncheckedCreateInput>
  /**
   * In case the Operator was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OperatorUpdateInput, Prisma.OperatorUncheckedUpdateInput>
}

/**
 * Operator delete
 */
export type OperatorDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
  /**
   * Filter which Operator to delete.
   */
  where: Prisma.OperatorWhereUniqueInput
}

/**
 * Operator deleteMany
 */
export type OperatorDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operators to delete
   */
  where?: Prisma.OperatorWhereInput
  /**
   * Limit how many Operators to delete.
   */
  limit?: number
}

/**
 * Operator.gameLaunchLinks
 */
export type Operator$gameLaunchLinksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the GameLaunchLink
   */
  select?: Prisma.GameLaunchLinkSelect<ExtArgs> | null
  /**
   * Omit specific fields from the GameLaunchLink
   */
  omit?: Prisma.GameLaunchLinkOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameLaunchLinkInclude<ExtArgs> | null
  where?: Prisma.GameLaunchLinkWhereInput
  orderBy?: Prisma.GameLaunchLinkOrderByWithRelationInput | Prisma.GameLaunchLinkOrderByWithRelationInput[]
  cursor?: Prisma.GameLaunchLinkWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GameLaunchLinkScalarFieldEnum | Prisma.GameLaunchLinkScalarFieldEnum[]
}

/**
 * Operator.games
 */
export type Operator$gamesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Game
   */
  select?: Prisma.GameSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Game
   */
  omit?: Prisma.GameOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GameInclude<ExtArgs> | null
  where?: Prisma.GameWhereInput
  orderBy?: Prisma.GameOrderByWithRelationInput | Prisma.GameOrderByWithRelationInput[]
  cursor?: Prisma.GameWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.GameScalarFieldEnum | Prisma.GameScalarFieldEnum[]
}

/**
 * Operator.invitations
 */
export type Operator$invitationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperatorInvitation
   */
  select?: Prisma.OperatorInvitationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OperatorInvitation
   */
  omit?: Prisma.OperatorInvitationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInvitationInclude<ExtArgs> | null
  where?: Prisma.OperatorInvitationWhereInput
  orderBy?: Prisma.OperatorInvitationOrderByWithRelationInput | Prisma.OperatorInvitationOrderByWithRelationInput[]
  cursor?: Prisma.OperatorInvitationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OperatorInvitationScalarFieldEnum | Prisma.OperatorInvitationScalarFieldEnum[]
}

/**
 * Operator.products
 */
export type Operator$productsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product
   */
  select?: Prisma.ProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Product
   */
  omit?: Prisma.ProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductInclude<ExtArgs> | null
  where?: Prisma.ProductWhereInput
  orderBy?: Prisma.ProductOrderByWithRelationInput | Prisma.ProductOrderByWithRelationInput[]
  cursor?: Prisma.ProductWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProductScalarFieldEnum | Prisma.ProductScalarFieldEnum[]
}

/**
 * Operator.transactions
 */
export type Operator$transactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Transaction
   */
  select?: Prisma.TransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Transaction
   */
  omit?: Prisma.TransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TransactionInclude<ExtArgs> | null
  where?: Prisma.TransactionWhereInput
  orderBy?: Prisma.TransactionOrderByWithRelationInput | Prisma.TransactionOrderByWithRelationInput[]
  cursor?: Prisma.TransactionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TransactionScalarFieldEnum | Prisma.TransactionScalarFieldEnum[]
}

/**
 * Operator.wallets
 */
export type Operator$walletsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Wallet
   */
  select?: Prisma.WalletSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Wallet
   */
  omit?: Prisma.WalletOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WalletInclude<ExtArgs> | null
  where?: Prisma.WalletWhereInput
  orderBy?: Prisma.WalletOrderByWithRelationInput | Prisma.WalletOrderByWithRelationInput[]
  cursor?: Prisma.WalletWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WalletScalarFieldEnum | Prisma.WalletScalarFieldEnum[]
}

/**
 * Operator without action
 */
export type OperatorDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operator
   */
  select?: Prisma.OperatorSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operator
   */
  omit?: Prisma.OperatorOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperatorInclude<ExtArgs> | null
}
