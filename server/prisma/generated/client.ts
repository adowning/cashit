
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "prisma/generated/libquery_engine-debian-openssl-3.0.x.so.node")

/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Session
 * 
 */
export type Session = Prisma.SessionModel
/**
 * Model Account
 * 
 */
export type Account = Prisma.AccountModel
/**
 * Model Verification
 * 
 */
export type Verification = Prisma.VerificationModel
/**
 * Model Game
 * 
 */
export type Game = Prisma.GameModel
/**
 * Model GameSession
 * 
 */
export type GameSession = Prisma.GameSessionModel
/**
 * Model GameSpin
 * 
 */
export type GameSpin = Prisma.GameSpinModel
/**
 * Model GameProvider
 * 
 */
export type GameProvider = Prisma.GameProviderModel
/**
 * Model GameLaunchLink
 * 
 */
export type GameLaunchLink = Prisma.GameLaunchLinkModel
/**
 * Model Operator
 * 
 */
export type Operator = Prisma.OperatorModel
/**
 * Model OperatorInvitation
 * 
 */
export type OperatorInvitation = Prisma.OperatorInvitationModel
/**
 * Model Product
 * 
 */
export type Product = Prisma.ProductModel
/**
 * Model Todo
 * 
 */
export type Todo = Prisma.TodoModel
/**
 * Model Tournament
 * 
 */
export type Tournament = Prisma.TournamentModel
/**
 * Model TournamentGame
 * 
 */
export type TournamentGame = Prisma.TournamentGameModel
/**
 * Model TournamentParticipant
 * 
 */
export type TournamentParticipant = Prisma.TournamentParticipantModel
/**
 * Model TournamentGamePlay
 * 
 */
export type TournamentGamePlay = Prisma.TournamentGamePlayModel
/**
 * Model TournamentReward
 * 
 */
export type TournamentReward = Prisma.TournamentRewardModel
/**
 * Model Transaction
 * 
 */
export type Transaction = Prisma.TransactionModel
/**
 * Model RebateTransaction
 * 
 */
export type RebateTransaction = Prisma.RebateTransactionModel
/**
 * Model Wallet
 * 
 */
export type Wallet = Prisma.WalletModel
/**
 * Model UserProfile
 * 
 */
export type UserProfile = Prisma.UserProfileModel
/**
 * Model VipInfo
 * 
 */
export type VipInfo = Prisma.VipInfoModel

export type GameCategory = $Enums.GameCategory
export const GameCategory = $Enums.GameCategory

export type GameProviderName = $Enums.GameProviderName
export const GameProviderName = $Enums.GameProviderName

export type ProviderAuthType = $Enums.ProviderAuthType
export const ProviderAuthType = $Enums.ProviderAuthType

export type PaymentMethod = $Enums.PaymentMethod
export const PaymentMethod = $Enums.PaymentMethod

export type Role = $Enums.Role
export const Role = $Enums.Role

export type KeyMode = $Enums.KeyMode
export const KeyMode = $Enums.KeyMode

export type InvitationStatus = $Enums.InvitationStatus
export const InvitationStatus = $Enums.InvitationStatus

export type TournamentStatus = $Enums.TournamentStatus
export const TournamentStatus = $Enums.TournamentStatus

export type TransactionType = $Enums.TransactionType
export const TransactionType = $Enums.TransactionType

export type TransactionStatus = $Enums.TransactionStatus
export const TransactionStatus = $Enums.TransactionStatus

export type RewardStatus = $Enums.RewardStatus
export const RewardStatus = $Enums.RewardStatus
