// This file was auto-generated by prisma-generator-typescript-interfaces

export type Role = 'USER' | 'ADMIN' | 'VIP' | 'MODERATOR' | 'SUPPORT'

export type UserStatus = 'ACTIVE' | 'INACTIVE' | 'ONLINE' | 'OFFLINE' | 'SUSPENDED' | 'BANNED'

export type Gender = 'MALE' | 'FEMALE' | 'NON_BINARY' | 'OTHER' | 'PREFER_NOT_TO_SAY'

export type GameCategory =
  | 'FISH'
  | 'POKER'
  | 'SLOTS'
  | 'TABLE_GAMES'
  | 'LIVE_CASINO'
  | 'SPORTSBOOK'
  | 'VIRTUAL_SPORTS'
  | 'LOTTERY'
  | 'CRASH'
  | 'OTHER'

export type GameProvider =
  | 'PRAGMATICPLAY'
  | 'EVOPLAY'
  | 'NETENT'
  | 'PLAYNGO'
  | 'RELAXGAMING'
  | 'HACKSAW'
  | 'BGAMING'
  | 'SPRIBE'
  | 'INTERNAL'

export type TransactionType =
  | 'DEPOSIT'
  | 'WITHDRAWAL'
  | 'BET'
  | 'WIN'
  | 'BONUS_AWARDED'
  | 'BONUS_WAGERED'
  | 'BONUS_EXPIRED'
  | 'TRANSFER_SENT'
  | 'TRANSFER_RECEIVED'
  | 'SYSTEM_ADJUSTMENT_CREDIT'
  | 'SYSTEM_ADJUSTMENT_DEBIT'
  | 'TOURNAMENT_BUYIN'
  | 'TOURNAMENT_PRIZE'
  | 'AFFILIATE_COMMISSION'
  | 'REFUND'
  | 'FEE'

export type TransactionStatus =
  | 'PENDING'
  | 'PROCESSING'
  | 'COMPLETED'
  | 'FAILED'
  | 'CANCELLED'
  | 'REFUNDED'
  | 'EXPIRED'
  | 'REJECTED'
  | 'REQUIRES_ACTION'
  | 'ON_HOLD'

export type NotificationType =
  | 'SYSTEM_MESSAGE'
  | 'FRIEND_REQUEST_RECEIVED'
  | 'FRIEND_REQUEST_ACCEPTED'
  | 'ACHIEVEMENT_UNLOCKED'
  | 'BALANCE_UPDATE'
  | 'PROMOTIONAL_OFFER'
  | 'TOURNAMENT_INVITE'
  | 'TOURNAMENT_RESULT'
  | 'SECURITY_ALERT'
  | 'GAME_EVENT'
  | 'NEW_MESSAGE'
  | 'LEVEL_UP'

export type FriendshipStatus = 'PENDING' | 'ACCEPTED' | 'DECLINED' | 'BLOCKED'

export type KeyMode =
  | 'read'
  | 'write'
  | 'upload'
  | 'manage_users'
  | 'manage_settings'
  | 'launch_game'

export type InvitationStatus = 'PENDING' | 'ACCEPTED' | 'DECLINED' | 'INACTIVE'

export interface Currency {
  id: string
  code: string
  name: string
  symbol: string
  precision: number
  type: string
  isActive: boolean
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  wallets: Wallet[]
  transactions: Transaction[]
}

export interface User {
  activeWalletId: string
  id: string
  username: string
  email: string
  emailVerified: Boolean | null
  phone: string | null
  phoneVerified: Date | null
  passwordHash: string
  role: Role
  status: UserStatus
  totalXp: number
  currentLevel: number
  referralCode: string | null
  commissionRate: number | null
  twoFactorEnabled: boolean | null
  isOnline: boolean | null
  twoFactorSecret: string | null
  avatar: string
  twoFactorRecoveryCodes: string[]
  lastLogin: Date | null
  lastIp: string | null
  createdAt: Date
  updatedAt: Date
  cashtag: string | null
  profile: Profile | null
  settings: Settings | null
  wallets: Wallet[]
  operatorAccessOwned: OperatorAccess[]
  posts: Post[]
  comments: Comment[]
  gameSessions: GameSession[]
  xpEvents: XpEvent[]
  userAchievements: UserAchievement[]
  notifications: Notification[]
  sentMessages: ChatMessage[]
  friendshipsSent: Friendship[]
  friendshipsReceived: Friendship[]
  financialTransactions: Transaction[]
  targetedTransactions: Transaction[]
  gameLaunchLinks: GameLaunchLink[]
  eventLogsAsActor: EventLog[]
  gameTransactions: GameTransaction[]
  referrerId: string | null
  // referrer: User | null;
  // referrals: User[];
}

export interface Profile {
  id: string
  balance: number
  totalXpFromOperator: number
  activeCurrencyType: string
  createdAt: Date
  updatedAt: Date
  currentGameSession: GameSession | null
  userId: string
  user: OmitReferrerAndReferrals<User>
  gameSessionId: string | null
}

export interface Settings {
  id: string
  theme: string | null
  language: string | null
  emailNotifications: boolean
  smsNotifications: boolean
  pushNotifications: boolean
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
}

export interface Wallet {
  id: string
  balance: number
  isActive: boolean
  address: string | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
  currencyCode: string
  currency: Currency
  transactions: Transaction[]
}

export interface OperatorAccess {
  id: string
  name: string
  operator_secret: string
  operator_access: string
  callback_url: string
  active: boolean
  permissions: KeyMode[]
  ips: string[]
  description: string | null
  last_used_at: Date | null
  createdAt: Date
  updatedAt: Date
  ownedById: string | null
  owner: User | null
  gameLaunchLinks: GameLaunchLink[]
  Product: Product[]
  Game: Game[]
}

export interface Achievement {
  id: string
  name: string
  description: string
  xpReward: number
  iconUrl: string | null
  secret: boolean
  createdAt: Date
  updatedAt: Date
  userAchievements: UserAchievement[]
}

export interface Game {
  id: string
  name: string
  title: string
  goldsvetData: JsonValue | null
  slug: string
  description: string | null
  provider: GameProvider
  category: GameCategory
  tags: string[]
  isActive: boolean
  thumbnailUrl: string | null
  bannerUrl: string | null
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  featured: boolean
  gameSessions: GameSession[]
  gameLaunchLinks: GameLaunchLink[]
  operatorId: string | null
  operator: OperatorAccess | null
}

export interface Post {
  id: string
  title: string
  content: string
  published: boolean
  tags: string[]
  viewCount: number
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  authorId: string
  author: User
  comments: Comment[]
}

export interface Comment {
  id: string
  content: string
  createdAt: Date
  updatedAt: Date
  postId: string
  post: Post
  authorId: string
  author: User
}

export interface GameSpin {
  id: string
  spinData: JsonValue | null
  createdAt: Date
  gameId: string
  game: GameSession
}

export interface GameSession {
  id: string
  isActive: boolean
  sessionData: JsonValue | null
  spins: GameSpin[]
  startedAt: Date
  endedAt: Date | null
  ipAddress: string | null
  userAgent: string | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
  gameId: string
  game: Game
  gameTransactions: GameTransaction[]
  Profile: Profile[]
}

export interface GameTransaction {
  id: string
  type: TransactionType
  amount: number
  currency: string
  transactionDetails: JsonValue | null
  createdAt: Date
  updatedAt: Date
  sessionId: string
  session: GameSession
  userId: string
  user: User
  parentFinancialTransactionId: string | null
  parentFinancialTransaction: Transaction | null
}

export interface UserAchievement {
  id: string
  unlockedAt: Date
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
  achievementId: string
  achievement: Achievement
}

export interface XpEvent {
  id: string
  points: number
  source: string
  sourceId: string | null
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
}

export interface Notification {
  id: string
  type: NotificationType
  title: string
  message: string
  isRead: boolean
  readAt: Date | null
  actionUrl: string | null
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
}

export interface ChatMessage {
  id: string
  channel: string
  content: string
  mediaUrl: string | null
  createdAt: Date
  updatedAt: Date
  authorId: string
  author: User
}

export interface Friendship {
  id: string
  status: FriendshipStatus
  createdAt: Date
  updatedAt: Date
  requesterId: string
  requester: User
  receiverId: string
  receiver: User
}

export interface Transaction {
  id: string
  type: TransactionType
  status: TransactionStatus
  amount: number
  description: string | null
  referenceId: string | null
  meta: JsonValue | null
  createdAt: Date
  updatedAt: Date
  productId: string | null
  walletId: string
  wallet: Wallet
  userId: string
  user: User
  currencyCode: string
  currency: Currency
  targetUserId: string | null
  targetUser: User | null
  gameTransaction: GameTransaction | null
  Product: Product[]
}

export interface GameLaunchLink {
  id: string
  token_internal: string
  currency: string
  player_operator_id: string | null
  mode: string
  meta: JsonValue | null
  request_ip: string | null
  user_agent: string | null
  session_url: string | null
  state: string
  active: boolean
  expires_at: Date | null
  extra_meta: JsonValue | null
  token_original: string | null
  createdAt: Date
  updatedAt: Date
  userId: string
  user: User
  gameId: string
  game: Game
  operatorId: string
  operator: OperatorAccess
}

export interface Product {
  id: string
  title: string
  description: string
  url: string
  productType: string
  bonusCode: string | null
  bonusTotalInCredits: number
  priceInCents: number
  amountToReceiveInCredits: number
  bestValue: number
  discountInCents: number
  bonusSpins: number
  isPromo: boolean | null
  totalDiscountInCents: number
  shopId: string | null
  createdAt: Date
  updatedAt: Date | null
  operator: OperatorAccess | null
  transactions: Transaction[]
}

export interface EventLog {
  id: string
  action: string
  targetType: string | null
  targetId: string | null
  data: JsonValue | null
  ipAddress: string | null
  userAgent: string | null
  timestamp: Date
  createdAt: Date
  updatedAt: Date
  actorId: string | null
  actor: User | null
}

type JsonValue =
  | string
  | number
  | boolean
  | { [key in string]?: JsonValue }
  | Array<JsonValue>
  | null

type OmitReferrerAndReferrals<T> = Omit<T, 'referrer' | 'referrals'>
