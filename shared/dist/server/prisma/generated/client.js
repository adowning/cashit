/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as process from 'node:process';
import * as path from 'node:path';
import { fileURLToPath } from 'node:url';
const __dirname = path.dirname(fileURLToPath(import.meta.url));
import * as $Enums from "./enums.ts";
import * as $Class from "./internal/class.ts";
import * as Prisma from "./internal/prismaNamespace.ts";
export * as $Enums from './enums.ts';
/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname);
export { Prisma };
// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node");
path.join(process.cwd(), "prisma/generated/libquery_engine-debian-openssl-3.0.x.so.node");
export const GameCategory = $Enums.GameCategory;
export const GameProviderName = $Enums.GameProviderName;
export const ProviderAuthType = $Enums.ProviderAuthType;
export const PaymentMethod = $Enums.PaymentMethod;
export const Role = $Enums.Role;
export const KeyMode = $Enums.KeyMode;
export const InvitationStatus = $Enums.InvitationStatus;
export const TournamentStatus = $Enums.TournamentStatus;
export const TransactionType = $Enums.TransactionType;
export const TransactionStatus = $Enums.TransactionStatus;
export const RewardStatus = $Enums.RewardStatus;
